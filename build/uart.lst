ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.compute_uart_bd,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	compute_uart_bd:
  25              	.LFB136:
  26              		.file 1 "Core/Src/uart.c"
   1:Core/Src/uart.c **** #include "uart.h"
   2:Core/Src/uart.c **** #include <string.h>
   3:Core/Src/uart.c **** 
   4:Core/Src/uart.c **** #define GPIOAEN                     (1U << 0)
   5:Core/Src/uart.c **** #define GPIODEN 					(1U << 3)
   6:Core/Src/uart.c **** 
   7:Core/Src/uart.c **** #define USART2EN                    (1U << 17)
   8:Core/Src/uart.c **** #define CR1_TE                      (1U << 3)
   9:Core/Src/uart.c **** #define CR1_RE                      (1U << 2)
  10:Core/Src/uart.c **** #define CR1_UE                      (1U << 13)
  11:Core/Src/uart.c **** 
  12:Core/Src/uart.c **** #define SR_TXE                      (1U << 7)
  13:Core/Src/uart.c **** #define SR_RXNE                     (1U << 5)
  14:Core/Src/uart.c **** 
  15:Core/Src/uart.c **** #define SYS_FREQ                    16000000
  16:Core/Src/uart.c **** #define APB1_CLK                    SYS_FREQ
  17:Core/Src/uart.c **** #define UART_BAUDRATE               115200
  18:Core/Src/uart.c **** 
  19:Core/Src/uart.c **** static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate);
  20:Core/Src/uart.c **** static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate);
  21:Core/Src/uart.c **** 
  22:Core/Src/uart.c **** void usart2_rxtx_init(void){
  23:Core/Src/uart.c ****     /********** Configure UART GPIO pin ************/
  24:Core/Src/uart.c ****     //1. Enable clock access to the pin
  25:Core/Src/uart.c ****     RCC->AHB1ENR |= GPIOAEN;
  26:Core/Src/uart.c **** 
  27:Core/Src/uart.c ****     //2. Set PA2 (UART_TX) mode to alternative function mode
  28:Core/Src/uart.c ****     GPIOA->MODER &= ~(1U << 4);
  29:Core/Src/uart.c ****     GPIOA->MODER |=  (1U << 5);
  30:Core/Src/uart.c ****     //3. Set PA2 alternate function type to UART_TX
  31:Core/Src/uart.c ****     GPIOA->AFR[0]   |= (0b0111 << 8);
  32:Core/Src/uart.c ****     
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 2


  33:Core/Src/uart.c ****     //4. Set PA3 (UART_RX) mode to alternative function mode 
  34:Core/Src/uart.c ****     GPIOA->MODER &= ~(1U << 6);
  35:Core/Src/uart.c ****     GPIOA->MODER |= (1U << 7);
  36:Core/Src/uart.c **** 
  37:Core/Src/uart.c ****     //5. Set PA3 alternate function type to UART_RX
  38:Core/Src/uart.c ****     GPIOA->AFR[0] |= (0b0111 << 12);
  39:Core/Src/uart.c ****     
  40:Core/Src/uart.c ****     /********* Configure UART module *************/
  41:Core/Src/uart.c ****     // 1. Enable clock access to UART2  
  42:Core/Src/uart.c ****     RCC->APB1ENR |= USART2EN;
  43:Core/Src/uart.c ****     // 2. Configure baudrate 
  44:Core/Src/uart.c ****     uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
  45:Core/Src/uart.c **** 
  46:Core/Src/uart.c ****     // 3. Configure the transfer and receive direction
  47:Core/Src/uart.c ****     USART2->CR1 |= CR1_TE; 
  48:Core/Src/uart.c ****     USART2->CR1 |= CR1_RE;
  49:Core/Src/uart.c **** 
  50:Core/Src/uart.c ****     // 4. Enable UART module
  51:Core/Src/uart.c ****     USART2->CR1 |= CR1_UE;
  52:Core/Src/uart.c **** }
  53:Core/Src/uart.c **** 
  54:Core/Src/uart.c **** void usart2_tx_init(void){
  55:Core/Src/uart.c ****     /********** Configure UART GPIO pin ************/
  56:Core/Src/uart.c ****     //1. Enable clock access to the pin
  57:Core/Src/uart.c ****     RCC->AHB1ENR |= GPIOAEN;
  58:Core/Src/uart.c ****     //2. Set PA2 (UART_TX) mode to alternative function mode
  59:Core/Src/uart.c ****     GPIOA->MODER &= ~(1U << 4);
  60:Core/Src/uart.c ****     GPIOA->MODER |=  (1U << 5);
  61:Core/Src/uart.c ****     //3. Set pin alternate function type to UART_TX
  62:Core/Src/uart.c ****     GPIOA->AFR[0]   |= (0b0111 << 8);
  63:Core/Src/uart.c ****     /********* Configure UART module *************/
  64:Core/Src/uart.c **** 
  65:Core/Src/uart.c ****     // 1. Enable clock access to UART2  
  66:Core/Src/uart.c ****     RCC->APB1ENR |= USART2EN;
  67:Core/Src/uart.c ****     // 2. Configure baudrate 
  68:Core/Src/uart.c ****     uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
  69:Core/Src/uart.c **** 
  70:Core/Src/uart.c ****     // 3. Configure the transfer direction
  71:Core/Src/uart.c ****     USART2->CR1 |= CR1_TE; 
  72:Core/Src/uart.c ****     // 4. Enable UART module
  73:Core/Src/uart.c ****     USART2->CR1 |= CR1_UE;
  74:Core/Src/uart.c **** }
  75:Core/Src/uart.c **** 
  76:Core/Src/uart.c **** void usart2_write_string(char* str){
  77:Core/Src/uart.c ****     int DataIdx;
  78:Core/Src/uart.c ****     int len = strlen(str);
  79:Core/Src/uart.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
  80:Core/Src/uart.c ****     {
  81:Core/Src/uart.c ****         usart2_write(*str++);
  82:Core/Src/uart.c ****     }
  83:Core/Src/uart.c **** }
  84:Core/Src/uart.c **** char usart2_read(void){
  85:Core/Src/uart.c ****     while (!(USART2->SR & SR_RXNE)){}
  86:Core/Src/uart.c **** 
  87:Core/Src/uart.c ****     return USART2->DR;
  88:Core/Src/uart.c **** }
  89:Core/Src/uart.c **** void usart2_write(char ch){
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 3


  90:Core/Src/uart.c ****     while (!(USART2->SR & SR_TXE)){}
  91:Core/Src/uart.c ****     
  92:Core/Src/uart.c ****     USART2-> DR = (ch & 0xFF);
  93:Core/Src/uart.c **** }
  94:Core/Src/uart.c **** static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate){
  95:Core/Src/uart.c ****     USARTx->BRR = compute_uart_bd(PeriphClk, BaudRate);
  96:Core/Src/uart.c **** }
  97:Core/Src/uart.c **** 
  98:Core/Src/uart.c **** static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate){
  27              		.loc 1 98 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  99:Core/Src/uart.c ****     return ((PeriphClk + (BaudRate/2U))/BaudRate);
  33              		.loc 1 99 0
  34 0000 00EB5100 		add	r0, r0, r1, lsr #1
  35              	.LVL1:
  36 0004 B0FBF1F0 		udiv	r0, r0, r1
 100:Core/Src/uart.c **** }...
  37              		.loc 1 100 0
  38 0008 80B2     		uxth	r0, r0
  39 000a 7047     		bx	lr
  40              		.cfi_endproc
  41              	.LFE136:
  43              		.section	.text.uart_set_baudrate,"ax",%progbits
  44              		.align	1
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv4-sp-d16
  50              	uart_set_baudrate:
  51              	.LFB135:
  94:Core/Src/uart.c **** static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate){
  52              		.loc 1 94 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              	.LVL2:
  57 0000 10B5     		push	{r4, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 4, -8
  61              		.cfi_offset 14, -4
  62 0002 0446     		mov	r4, r0
  63 0004 0846     		mov	r0, r1
  64              	.LVL3:
  95:Core/Src/uart.c ****     USARTx->BRR = compute_uart_bd(PeriphClk, BaudRate);
  65              		.loc 1 95 0
  66 0006 1146     		mov	r1, r2
  67              	.LVL4:
  68 0008 FFF7FEFF 		bl	compute_uart_bd
  69              	.LVL5:
  70 000c A060     		str	r0, [r4, #8]
  71 000e 10BD     		pop	{r4, pc}
  72              		.cfi_endproc
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 4


  73              	.LFE135:
  75              		.section	.text.usart2_rxtx_init,"ax",%progbits
  76              		.align	1
  77              		.global	usart2_rxtx_init
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu fpv4-sp-d16
  83              	usart2_rxtx_init:
  84              	.LFB130:
  22:Core/Src/uart.c **** void usart2_rxtx_init(void){
  85              		.loc 1 22 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89 0000 10B5     		push	{r4, lr}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
  25:Core/Src/uart.c ****     RCC->AHB1ENR |= GPIOAEN;
  94              		.loc 1 25 0
  95 0002 1B4A     		ldr	r2, .L6
  96 0004 136B     		ldr	r3, [r2, #48]
  97 0006 43F00103 		orr	r3, r3, #1
  98 000a 1363     		str	r3, [r2, #48]
  28:Core/Src/uart.c ****     GPIOA->MODER &= ~(1U << 4);
  99              		.loc 1 28 0
 100 000c 194B     		ldr	r3, .L6+4
 101 000e 1968     		ldr	r1, [r3]
 102 0010 21F01001 		bic	r1, r1, #16
 103 0014 1960     		str	r1, [r3]
  29:Core/Src/uart.c ****     GPIOA->MODER |=  (1U << 5);
 104              		.loc 1 29 0
 105 0016 1968     		ldr	r1, [r3]
 106 0018 41F02001 		orr	r1, r1, #32
 107 001c 1960     		str	r1, [r3]
  31:Core/Src/uart.c ****     GPIOA->AFR[0]   |= (0b0111 << 8);
 108              		.loc 1 31 0
 109 001e 196A     		ldr	r1, [r3, #32]
 110 0020 41F4E061 		orr	r1, r1, #1792
 111 0024 1962     		str	r1, [r3, #32]
  34:Core/Src/uart.c ****     GPIOA->MODER &= ~(1U << 6);
 112              		.loc 1 34 0
 113 0026 1968     		ldr	r1, [r3]
 114 0028 21F04001 		bic	r1, r1, #64
 115 002c 1960     		str	r1, [r3]
  35:Core/Src/uart.c ****     GPIOA->MODER |= (1U << 7);
 116              		.loc 1 35 0
 117 002e 1968     		ldr	r1, [r3]
 118 0030 41F08001 		orr	r1, r1, #128
 119 0034 1960     		str	r1, [r3]
  38:Core/Src/uart.c ****     GPIOA->AFR[0] |= (0b0111 << 12);
 120              		.loc 1 38 0
 121 0036 196A     		ldr	r1, [r3, #32]
 122 0038 41F4E041 		orr	r1, r1, #28672
 123 003c 1962     		str	r1, [r3, #32]
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 5


  42:Core/Src/uart.c ****     RCC->APB1ENR |= USART2EN;
 124              		.loc 1 42 0
 125 003e 136C     		ldr	r3, [r2, #64]
 126 0040 43F40033 		orr	r3, r3, #131072
 127 0044 1364     		str	r3, [r2, #64]
  44:Core/Src/uart.c ****     uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 128              		.loc 1 44 0
 129 0046 0C4C     		ldr	r4, .L6+8
 130 0048 4FF4E132 		mov	r2, #115200
 131 004c 0B49     		ldr	r1, .L6+12
 132 004e 2046     		mov	r0, r4
 133 0050 FFF7FEFF 		bl	uart_set_baudrate
 134              	.LVL6:
  47:Core/Src/uart.c ****     USART2->CR1 |= CR1_TE; 
 135              		.loc 1 47 0
 136 0054 E368     		ldr	r3, [r4, #12]
 137 0056 43F00803 		orr	r3, r3, #8
 138 005a E360     		str	r3, [r4, #12]
  48:Core/Src/uart.c ****     USART2->CR1 |= CR1_RE;
 139              		.loc 1 48 0
 140 005c E368     		ldr	r3, [r4, #12]
 141 005e 43F00403 		orr	r3, r3, #4
 142 0062 E360     		str	r3, [r4, #12]
  51:Core/Src/uart.c ****     USART2->CR1 |= CR1_UE;
 143              		.loc 1 51 0
 144 0064 E368     		ldr	r3, [r4, #12]
 145 0066 43F40053 		orr	r3, r3, #8192
 146 006a E360     		str	r3, [r4, #12]
 147 006c 10BD     		pop	{r4, pc}
 148              	.L7:
 149 006e 00BF     		.align	2
 150              	.L6:
 151 0070 00380240 		.word	1073887232
 152 0074 00000240 		.word	1073872896
 153 0078 00440040 		.word	1073759232
 154 007c 0024F400 		.word	16000000
 155              		.cfi_endproc
 156              	.LFE130:
 158              		.section	.text.usart2_tx_init,"ax",%progbits
 159              		.align	1
 160              		.global	usart2_tx_init
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	usart2_tx_init:
 167              	.LFB131:
  54:Core/Src/uart.c **** void usart2_tx_init(void){
 168              		.loc 1 54 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 10B5     		push	{r4, lr}
 173              	.LCFI2:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 6


  57:Core/Src/uart.c ****     RCC->AHB1ENR |= GPIOAEN;
 177              		.loc 1 57 0
 178 0002 134A     		ldr	r2, .L10
 179 0004 136B     		ldr	r3, [r2, #48]
 180 0006 43F00103 		orr	r3, r3, #1
 181 000a 1363     		str	r3, [r2, #48]
  59:Core/Src/uart.c ****     GPIOA->MODER &= ~(1U << 4);
 182              		.loc 1 59 0
 183 000c 114B     		ldr	r3, .L10+4
 184 000e 1968     		ldr	r1, [r3]
 185 0010 21F01001 		bic	r1, r1, #16
 186 0014 1960     		str	r1, [r3]
  60:Core/Src/uart.c ****     GPIOA->MODER |=  (1U << 5);
 187              		.loc 1 60 0
 188 0016 1968     		ldr	r1, [r3]
 189 0018 41F02001 		orr	r1, r1, #32
 190 001c 1960     		str	r1, [r3]
  62:Core/Src/uart.c ****     GPIOA->AFR[0]   |= (0b0111 << 8);
 191              		.loc 1 62 0
 192 001e 196A     		ldr	r1, [r3, #32]
 193 0020 41F4E061 		orr	r1, r1, #1792
 194 0024 1962     		str	r1, [r3, #32]
  66:Core/Src/uart.c ****     RCC->APB1ENR |= USART2EN;
 195              		.loc 1 66 0
 196 0026 136C     		ldr	r3, [r2, #64]
 197 0028 43F40033 		orr	r3, r3, #131072
 198 002c 1364     		str	r3, [r2, #64]
  68:Core/Src/uart.c ****     uart_set_baudrate(USART2, APB1_CLK, UART_BAUDRATE);
 199              		.loc 1 68 0
 200 002e 0A4C     		ldr	r4, .L10+8
 201 0030 4FF4E132 		mov	r2, #115200
 202 0034 0949     		ldr	r1, .L10+12
 203 0036 2046     		mov	r0, r4
 204 0038 FFF7FEFF 		bl	uart_set_baudrate
 205              	.LVL7:
  71:Core/Src/uart.c ****     USART2->CR1 |= CR1_TE; 
 206              		.loc 1 71 0
 207 003c E368     		ldr	r3, [r4, #12]
 208 003e 43F00803 		orr	r3, r3, #8
 209 0042 E360     		str	r3, [r4, #12]
  73:Core/Src/uart.c ****     USART2->CR1 |= CR1_UE;
 210              		.loc 1 73 0
 211 0044 E368     		ldr	r3, [r4, #12]
 212 0046 43F40053 		orr	r3, r3, #8192
 213 004a E360     		str	r3, [r4, #12]
 214 004c 10BD     		pop	{r4, pc}
 215              	.L11:
 216 004e 00BF     		.align	2
 217              	.L10:
 218 0050 00380240 		.word	1073887232
 219 0054 00000240 		.word	1073872896
 220 0058 00440040 		.word	1073759232
 221 005c 0024F400 		.word	16000000
 222              		.cfi_endproc
 223              	.LFE131:
 225              		.section	.text.usart2_read,"ax",%progbits
 226              		.align	1
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 7


 227              		.global	usart2_read
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv4-sp-d16
 233              	usart2_read:
 234              	.LFB133:
  84:Core/Src/uart.c **** char usart2_read(void){
 235              		.loc 1 84 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.L13:
  85:Core/Src/uart.c ****     while (!(USART2->SR & SR_RXNE)){}
 241              		.loc 1 85 0 discriminator 1
 242 0000 044B     		ldr	r3, .L14
 243 0002 1B68     		ldr	r3, [r3]
 244 0004 13F0200F 		tst	r3, #32
 245 0008 FAD0     		beq	.L13
  87:Core/Src/uart.c ****     return USART2->DR;
 246              		.loc 1 87 0
 247 000a 024B     		ldr	r3, .L14
 248 000c 5868     		ldr	r0, [r3, #4]
  88:Core/Src/uart.c **** }
 249              		.loc 1 88 0
 250 000e C0B2     		uxtb	r0, r0
 251 0010 7047     		bx	lr
 252              	.L15:
 253 0012 00BF     		.align	2
 254              	.L14:
 255 0014 00440040 		.word	1073759232
 256              		.cfi_endproc
 257              	.LFE133:
 259              		.section	.text.usart2_write,"ax",%progbits
 260              		.align	1
 261              		.global	usart2_write
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	usart2_write:
 268              	.LFB134:
  89:Core/Src/uart.c **** void usart2_write(char ch){
 269              		.loc 1 89 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274              	.LVL8:
 275              	.L17:
  90:Core/Src/uart.c ****     while (!(USART2->SR & SR_TXE)){}
 276              		.loc 1 90 0 discriminator 1
 277 0000 034B     		ldr	r3, .L18
 278 0002 1B68     		ldr	r3, [r3]
 279 0004 13F0800F 		tst	r3, #128
 280 0008 FAD0     		beq	.L17
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 8


  92:Core/Src/uart.c ****     USART2-> DR = (ch & 0xFF);
 281              		.loc 1 92 0
 282 000a 014B     		ldr	r3, .L18
 283 000c 5860     		str	r0, [r3, #4]
 284 000e 7047     		bx	lr
 285              	.L19:
 286              		.align	2
 287              	.L18:
 288 0010 00440040 		.word	1073759232
 289              		.cfi_endproc
 290              	.LFE134:
 292              		.section	.text.usart2_write_string,"ax",%progbits
 293              		.align	1
 294              		.global	usart2_write_string
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	usart2_write_string:
 301              	.LFB132:
  76:Core/Src/uart.c **** void usart2_write_string(char* str){
 302              		.loc 1 76 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              	.LVL9:
 307 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 308              	.LCFI3:
 309              		.cfi_def_cfa_offset 24
 310              		.cfi_offset 3, -24
 311              		.cfi_offset 4, -20
 312              		.cfi_offset 5, -16
 313              		.cfi_offset 6, -12
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 0546     		mov	r5, r0
  78:Core/Src/uart.c ****     int len = strlen(str);
 317              		.loc 1 78 0
 318 0004 FFF7FEFF 		bl	strlen
 319              	.LVL10:
 320 0008 0746     		mov	r7, r0
 321              	.LVL11:
  79:Core/Src/uart.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 322              		.loc 1 79 0
 323 000a 0024     		movs	r4, #0
 324 000c 05E0     		b	.L21
 325              	.LVL12:
 326              	.L22:
  81:Core/Src/uart.c ****         usart2_write(*str++);
 327              		.loc 1 81 0 discriminator 3
 328 000e 6E1C     		adds	r6, r5, #1
 329              	.LVL13:
 330 0010 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 331 0012 FFF7FEFF 		bl	usart2_write
 332              	.LVL14:
  79:Core/Src/uart.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 333              		.loc 1 79 0 discriminator 3
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 9


 334 0016 0134     		adds	r4, r4, #1
 335              	.LVL15:
  81:Core/Src/uart.c ****         usart2_write(*str++);
 336              		.loc 1 81 0 discriminator 3
 337 0018 3546     		mov	r5, r6
 338              	.LVL16:
 339              	.L21:
  79:Core/Src/uart.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 340              		.loc 1 79 0 discriminator 1
 341 001a BC42     		cmp	r4, r7
 342 001c F7DB     		blt	.L22
  83:Core/Src/uart.c **** }
 343              		.loc 1 83 0
 344 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 345              		.cfi_endproc
 346              	.LFE132:
 348              		.text
 349              	.Letext0:
 350              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 351              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 352              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 353              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 354              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 355              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 356              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 357              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 358              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 359              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:18     .text.compute_uart_bd:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:24     .text.compute_uart_bd:00000000 compute_uart_bd
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:44     .text.uart_set_baudrate:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:50     .text.uart_set_baudrate:00000000 uart_set_baudrate
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:76     .text.usart2_rxtx_init:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:83     .text.usart2_rxtx_init:00000000 usart2_rxtx_init
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:151    .text.usart2_rxtx_init:00000070 $d
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:159    .text.usart2_tx_init:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:166    .text.usart2_tx_init:00000000 usart2_tx_init
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:218    .text.usart2_tx_init:00000050 $d
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:226    .text.usart2_read:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:233    .text.usart2_read:00000000 usart2_read
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:255    .text.usart2_read:00000014 $d
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:260    .text.usart2_write:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:267    .text.usart2_write:00000000 usart2_write
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:288    .text.usart2_write:00000010 $d
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:293    .text.usart2_write_string:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\cciEqsJd.s:300    .text.usart2_write_string:00000000 usart2_write_string
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strlen
